name: Deploy AKS, Key Vault, and Arc
on:
    workflow_dispatch:
        inputs:
          clusterSubscription:
            description: 'The subscription ID where to create the Arc-enabled cluster.'
            required: true
            type: string
            default: '5f5dd16b-0879-4c86-884f-30347411b95f'
          clusterResourceGroup:
            description: 'The resource group where to create the Arc-enabled cluster.'
            required: true
            type: string
            default: 'ewakstest'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Checkout repository
      uses: actions/checkout@v2

    # Deploy kevault 
    - name: deploy kevault
      id: deploy_key_vault
      uses: azure/arm-deploy@v1
      with:
       subscriptionId: ${{ github.event.inputs.clusterSubscription }}
       resourceGroupName: ${{ github.event.inputs.clusterResourceGroup }}
       template: ./infra/AKS/kevault.bicep
       parameters: servicePrincipalClientId=${{ secrets.CLIENT_ID }} servicePrincipalClientSecret=${{ secrets.CLIENT_SECRET }} sshPublicKey="${{ secrets.RSA_PUBLIC_KEY }}"
       failOnStdErr: false
    
    # Deploy log analytics
    - name: deploy log analytics
      id: deploy_log_analytics
      uses: azure/arm-deploy@v1
      with:
         subscriptionId: ${{ github.event.inputs.clusterSubscription }}
         resourceGroupName: ${{ github.event.inputs.clusterResourceGroup }}
         template: ./infra/AKS/loganalytics.bicep
         failOnStdErr: false    

    # Deploy AKS
    - name: deploy AKS
      id: deploy_aks
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ github.event.inputs.clusterSubscription }}
        resourceGroupName: ${{ github.event.inputs.clusterResourceGroup }}
        template: ./infra/AKS/aks.bicep
        parameters: servicePrincipalClientId=${{ secrets.CLIENT_ID }} servicePrincipalClientSecret=${{ secrets.CLIENT_SECRET }} logAnalyticsWorkspaceResourceID=${{ steps.deploy_log_analytics.outputs.logAnalyticsWorkspaceId }} sshRSAPublicKey="${{ secrets.RSA_PUBLIC_KEY }}"
        failOnStdErr: false
    
    # Deploy arc
    - name: deploy arc
      id: deploy_arc
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ github.event.inputs.clusterSubscription }}
        resourceGroupName: ${{ github.event.inputs.clusterResourceGroup }}
        template: ./infra/AKS/arc.bicep
        parameters: clusterName=${{ steps.deploy_aks.outputs.aksClusterName }}
        failOnStdErr: false

    - name: Deploy AIO to Arc-enabled Cluster
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az iot ops init \
            --cluster ${{ steps.deploy_aks.outputs.aksClusterName }} \ 
            --resource-group ${{ github.event.inputs.clusterResourceGroup }} \ 
            --kv-id ${{ steps.deploy_key_vault.outputs.keyVaultName }} \
            --sp-app-id ${{ secrets.CLIENT_ID }}  \
            --sp-secret ${{ secrets.CLIENT_SECRET }} \
            --kv-sat-secret-name servicePrincipalClientSecret
            --no-deploy